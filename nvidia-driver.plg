<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
  <!ENTITY name      "nvidia-driver">
  <!ENTITY author    "ich777">
  <!ENTITY version   "2020.10.23">
  <!ENTITY launch    "Settings/nvidia-driver">
  <!ENTITY gitURL    "https://github.com/&author;/unraid-nvidia-driver/raw/master">
  <!ENTITY pluginURL "&gitURL;/&name;.plg">
  <!ENTITY md5       "eaee4d175ef96903443dee3abf3c80c1">
  <!ENTITY plugin    "/boot/config/plugins/&name;">
  <!ENTITY emhttp    "/usr/local/emhttp/plugins/&name;">
]>

<PLUGIN  name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" min="6.9.0-beta31">

<CHANGES>

###2020.10.23
Initial release

</CHANGES>

<FILE Run="/bin/bash">
<INLINE>
rm -f $(ls /boot/config/plugins/&name;/&name;*.txz 2>/dev/null|grep -v '&version;')
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/&name;/&name;-&version;.txz" Run="upgradepkg --install-new">
<URL>&gitURL;/packages/&name;-&version;.txz</URL>
<MD5>&md5;</MD5>
</FILE>

<FILE Name="&emhttp;/README.md">
<INLINE>
**Nvidia Driver**

Initial release from the Nvidia-Driver-Package for Unraid v6.9.0-beta31 with Nvidia driver v455.28
</INLINE>
</FILE>

<FILE Run="/bin/bash">
<INLINE>

#Create settings file if not found
if [ ! -f "&plugin;/settings.cfg" ]; then
  echo 'first_installation=true
driver_version=latest' > "&plugin;/settings.cfg"
fi

#Set variables
KERNEL_V="$(uname -r)"
DRIVER_AVAIL="$(wget -qO- https://s3.amazonaws.com/dnld.lime-technology.com/drivers/releases.json | jq -r '.[] | "\(.kernel) \(.version) \(.url) \(.md5) \(.size)" | select( index("'${KERNEL_V}'"))')"
NV_DRV_V="$(grep "driver_version" "&plugin;/settings.cfg" | cut -d '=' -f2)"

#Check Nvidia driver version and set download variable, if Nvidia driver version is not found for this kernel fall back to latest
if [ "${NV_DRV_V}" == "latest" ]; then
    DL_DRV="$(echo "$DRIVER_AVAIL" | head -1 | cut -d ' ' -f2-)"
    NV_DRV_V="$(echo "$DL_DRV" | cut -d ' ' -f1)"
else
    DL_DRV="$(echo "$DRIVER_AVAIL" | grep "$NV_DRV_V" | cut -d ' ' -f2-)"
    if [ -z "${DL_DRV}" ]; then
      NV_DRV_OLD=${NV_DRV_V}
      DL_DRV="$(echo "$DRIVER_AVAIL" | head -1 | cut -d ' ' -f2-)"
      NV_DRV_V="$(echo "$DL_DRV" | cut -d ' ' -f1)"
      echo
      echo "---Can't find Nvidia Driver v${NV_DRV_OLD} for your Kernel v${KERNEL_V%%-*} falling back to latest Nvidia Driver v${NV_DRV_V}---"
    fi
fi

if [ ! -d "&plugin;/packages" ]; then
  mkdir -p "&plugin;/packages"
fi

download() {
#Download Nvidia Driver Package
if wget -q -nc --show-progress --progress=bar:force:noscroll -O "&plugin;/packages/nvidia-${NV_DRV_V}-${KERNEL_V}-1.txz" "$(echo "$DL_DRV" | cut -d ' ' -f2)" ; then
  if [ "$(md5sum "&plugin;/packages/nvidia-${NV_DRV_V}-${KERNEL_V}-1.txz" | cut -d ' ' -f1)" != "$(echo "$DL_DRV" | cut -d ' ' -f3)" ]; then
    echo
    echo "---CHECKSUM ERROR!---"
    exit 1
  fi
  echo
  echo "---Sucessfully downloaded Nvidia Driver Package v${NV_DRV_V}----"
else
  echo
  echo "-------Can't download Nvidia Driver Package v${NV_DRV_V}--------"
  exit 1
fi
}

check() {
if [ ! -f &plugin;/packages/nvidia-${NV_DRV_V}-${KERNEL_V}-1.txz ]; then
  echo
  echo "-----------Downloading Nvidia Driver Package v${NV_DRV_V}------------"
  echo "---This could take some time, please don't close this window!---"
  download
else
  echo
  echo "------------Nvidia driver v${NV_DRV_V} found locally------------"
fi
}

install() {
#Install driver package
/sbin/installpkg "&plugin;/packages/nvidia-${NV_DRV_V}-${KERNEL_V}-1.txz"
depmod >> /dev/null
modprobe nvidia  >> /dev/null
}

#Check if Nvidia Driver Package is already downloaded
check

#Install Nvidia Driver Package
echo
echo "---------Installing Nvidia Driver Package v${NV_DRV_V}----------"
install > /dev/null

#Display message to disable and enable Docker on first installation or display successfull message
if [ "$(grep "first_installation=" "&plugin;/settings.cfg" | cut -d '=' -f2)" == "true" ]; then
  /usr/local/emhttp/plugins/dynamix/scripts/notify -e "Nvidia Driver" -d "Please make sure to disable and enable Docker if you installed the Nvidia driver for the first time! Settings -> Docker -> Enable Docker 'No' -> Apply -> Enable Docker 'Yes'" -i "alert"
  sed -i '/first_installation=true/c\first_installation=false' "&plugin;/settings.cfg"
  echo
  echo "-----Installation of Nvidia driver v${NV_DRV_V} successfull-----"
  echo
  echo "Please make sure to disable and enable Docker if you installed the Nvidia driver for the first time! Settings -> Docker -> Enable Docker 'No' -> Apply -> Enable Docker 'Yes'"
else
  echo
  echo "-----Installation of Nvidia driver v${NV_DRV_V} successfull-----"
fi

</INLINE>
</FILE>

<FILE Run="/bin/bash" Method="remove">
<INLINE>

echo "----------------------------------------"
echo "---Uninstalling Nvidia driver package---"
echo "----------------------------------------"
# Remove plugin related files
removepkg &name;-&version;
rm -rf /usr/local/emhttp/plugins/&name;
rm -rf &plugin;
echo
echo "-----Nvidia Driver uninstalled, please reboot your server!------"

</INLINE>
</FILE>
</PLUGIN>